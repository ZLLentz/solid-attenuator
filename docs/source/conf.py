# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import pathlib
import sys
from datetime import datetime

import caproto
import caproto.docs
import sphinx_rtd_theme

module_path = pathlib.Path(__file__).resolve().parents[2]
sys.path.insert(0, str(module_path))

# Hackity hack:
sys.modules['ioc_lfe_at2l0_calc'] = __import__('ioc-lfe-at2l0-calc')


# -- Project information -----------------------------------------------------
project = 'hxr-attenuator'
author = 'SLAC National Accelerator Laboratory'

year = datetime.now().year
copyright = f'{year}, SLAC National Accelerator Laboratory'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = ''

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '3.2.1'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    'sphinx.ext.intersphinx',
    'numpydoc',
    # 'doctr_versions_menu',
    'sphinx_rtd_theme',
]

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']
templates_path = [caproto.docs.templates.PATH]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'hxr_attenuator'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'hxr-attenuator.tex', 'hxr-attenuator Documentation',
     'SLAC National Accelerator Laboratory', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'hxr-attenuator', 'hxr-attenuator Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'hxr-attenuator', 'hxr-attenuator Documentation',
     author, 'hxr-attenuator', '',
     'Miscellaneous'),
]


# -- Extension configuration -------------------------------------------------
# autoclass_content = 'init'  # otherwise duplicates will be generated
# autosummary_context = caproto.docs.autosummary_context
# autodoc_default_options = caproto.docs.autodoc_default_options

# html_context = {
#     **autosummary_context,
#     'css_files': [
#         '_static/theme_overrides.css',  # override wide tables in RTD theme
#     ],
# }

# intersphinx_mapping = {
#     # 'ophyd': ('https://blueskyproject.io/ophyd', None),
#     'python': ('https://docs.python.org/3', None),
#     # 'numpy': ('https://docs.scipy.org/doc/numpy', None),
#     'caproto': ('https://caproto.github.io/caproto/master', None),
# }

# def setup(app):
#     caproto.docs.setup(app)


def setup(app):
    caproto.docs.setup(app)


autodoc_default_options = {
    'members': '',
    'member-order': 'bysource',
    'special-members': '',
    'undoc-members': False,
    'exclude-members': ''
}

autosummary_generate = True
autoclass_content = 'init'  # otherwise duplicates will be generated
autosummary_context = {
    **caproto.docs.autosummary_context
}
html_context = autosummary_context
numpydoc_show_class_members = False
